{"ast":null,"code":"var _jsxFileName = \"/Users/c097850/workspaceNB/robofriends/src/App.js\";\nimport React from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n  } // Becauase this is part of react we dont need arrow function\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  } // ALWAYS USE THIS SYNTAX WHEN CREATING YOUR OWN FUNCTION\n\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/c097850/workspaceNB/robofriends/src/App.js"],"names":["React","CardList","SearchBox","App","Component","constructor","onSearchChange","event","setState","searchField","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAoBdC,cApBc,GAoBIC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAtBa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH,GAP6B,CAS9B;;;AACAK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACC,IAAT;AACH,KAHL,EAIKF,IAJL,CAIUG,KAAK,IAAI;AACX,WAAKX,QAAL,CAAc;AAAEK,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACH,KANL;AAOH,GAlB6B,CAoB9B;;;AAKAC,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAI;AACrD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAlC,CAAP;AACH,KAFsB,CAAvB;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKnB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AArC6B;;AAwClC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    // Becauase this is part of react we dont need arrow function\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                response.json();\n            })\n            .then(users => {\n                this.setState({ robots: users });\n            })\n    }\n\n    // ALWAYS USE THIS SYNTAX WHEN CREATING YOUR OWN FUNCTION\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value })\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n        })\n\n        return (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <CardList robots={filteredRobots} />\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}